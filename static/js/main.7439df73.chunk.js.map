{"version":3,"sources":["components/ButtonUp/Button.module.css","components/Searchbar/Searchbar.module.css","components/Modal/Modal.module.css","App.module.css","components/Searchbar/index.js","components/Searchbar/Searchbar.jsx","components/ImageGallery/index.js","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Modal/index.js","components/ImageGalleryItem/index.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ButtonUp/ButtonUp.jsx","components/ButtonUp/ButtonDown.jsx","service/api.js","App.js","index.js"],"names":["module","exports","Searchbar","state","query","props","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","onSubmit","handleClearInput","className","s","this","variant","color","type","SearchFormButton","SearchFormInput","name","autoComplete","onClick","onInput","autoFocus","placeholder","PureComponent","ImageGallery","ModalOpenClick","console","log","target","children","id","modalRoot","document","querySelector","Modal","componentDidMount","window","addEventListener","handleKeyDown","componentWillUnmount","removeEventListener","code","onCloseModal","modalImg","createPortal","styles","Overlay","src","alt","ModalCloseBtn","ImageGalleryItem","showModal","images","onOpenModal","user","length","bgColor","title","size","map","previewURL","largeImageURL","width","height","Button","handleTop","scrollTo","top","behavior","BtnUp","Component","href","BtnDown","currentPage","pageSize","URL","axios","get","then","data","hits","App","isLoading","onChange","fetch","api","prevState","finally","handleToDown","scrollBy","innerHeight","handleClickMoreBtn","dataset","source","prevProps","filter","LoadMore","ButtonUp","ButtonDown","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7439df73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnUp\":\"Button_BtnUp__1RiFy\",\"BtnDown\":\"Button_BtnDown__3p4Tn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2OjKd\",\"SearchFormInput\":\"Searchbar_SearchFormInput__sqsi0\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3x8Gd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3Lsc3\",\"Modal\":\"Modal_Modal__3180K\",\"ModalCloseBtn\":\"Modal_ModalCloseBtn__e-08E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__eNl18\",\"App-logo\":\"App_App-logo__2NVmP\",\"App-logo-spin\":\"App_App-logo-spin__1VqlD\",\"App-header\":\"App_App-header__1c5SA\",\"App-link\":\"App_App-link__2Djrh\",\"LoadMore\":\"App_LoadMore__2CRKY\"};","import Searchbar from './Searchbar';\r\n\r\nexport default Searchbar;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Searchbar.module.css\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nclass Searchbar extends PureComponent {\r\n  state = {\r\n    query: this.props.query,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n  };\r\n  handleClearInput = () => {\r\n    this.setState({ query: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className={s.SearchFormButton}\r\n          >\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </Button>\r\n\r\n          <input\r\n            color=\"primary\"\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            name=\"query\"\r\n            value={this.state.query}\r\n            autoComplete=\"off\"\r\n            onClick={this.handleClearInput}\r\n            onInput={this.handleChange}\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            variant=\"contained\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  query: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import ImageGallery from './ImageGallery';\r\n\r\nexport default ImageGallery;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ImageGallery extends PureComponent {\r\n  ModalOpenClick = (e) => {\r\n    console.log(e.target);\r\n    console.log(e.currentTarget);\r\n  };\r\n  render() {\r\n    const { children } = this.props;\r\n    return <ul id=\"imageGallery\">{children}</ul>;\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  onOpenModal: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Modal.module.css\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\nclass Modal extends PureComponent {\r\n  componentDidMount = () => {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  };\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onCloseModal();\r\n    }\r\n    if (e.target === e.currentTarget) {\r\n      this.props.onCloseModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { modalImg, onCloseModal } = this.props;\r\n    return createPortal(\r\n      <div className={styles.Overlay} onClick={this.handleKeyDown}>\r\n        <div className={styles.Modal}>\r\n          <img src={modalImg} alt=\"\" />\r\n          <button\r\n            type=\"button\"\r\n            className={styles.ModalCloseBtn}\r\n            onClick={onCloseModal}\r\n          >\r\n            x\r\n          </button>\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  modalImg: PropTypes.string.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import Modal from './Modal';\r\n\r\nexport default Modal;\r\n","import ImageGalleryItem from './ImageGalleryItem';\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"../Modal\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nclass ImageGalleryItem extends PureComponent {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n  render() {\r\n    const { images, onOpenModal } = this.props;\r\n    const { showModal, src, user } = this.state;\r\n    return (\r\n      <>\r\n        {images.length < 0 && (\r\n          <Loader\r\n            type=\"bubble-top\"\r\n            bgColor={\"#FFFFFF\"}\r\n            title={\"bubble-top\"}\r\n            size={100}\r\n          />\r\n        )}\r\n        {!showModal ? (\r\n          images.map(({ id, previewURL, largeImageURL, user }) => {\r\n            return (\r\n              <li key={id} onClick={onOpenModal}>\r\n                <img\r\n                  src={previewURL}\r\n                  alt={user}\r\n                  width=\"140\"\r\n                  height=\"100\"\r\n                  data-source={largeImageURL}\r\n                  data-title={user}\r\n                />\r\n              </li>\r\n            );\r\n          })\r\n        ) : (\r\n          <Modal>\r\n            <img src={src} alt={user} />\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\n\r\nimport styles from \"./Button.module.css\";\r\n\r\nclass Button extends Component {\r\n  handleTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <button className={styles.BtnUp} onClick={this.handleTop}>\r\n          &#8593;\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\n\r\nimport styles from \"./Button.module.css\";\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <a href=\"#loadMore\">\r\n          <button className={styles.BtnDown}>&#8595;</button>\r\n        </a>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import axios from \"axios\";\r\n\r\nconst fetchImages = ({ currentPage, query, pageSize }) => {\r\n  const ApiKey = \"21072245-3acfda09a1d5bc65070e6b336\";\r\n  const URL = `https://pixabay.com/api/?\r\nq=${query}&page=${currentPage}&key=${ApiKey}&image_type=photo&orientation=horizontal&per_page=${pageSize}`;\r\n\r\n  return axios.get(URL).then(({ data }) => data.hits);\r\n};\r\n\r\nexport default { fetchImages };\r\n","import React, { Component } from \"react\";\r\n\r\nimport styles from \"./App.module.css\";\r\nimport Searchbar from \"./components/Searchbar\";\r\nimport ImageGallery from \"./components/ImageGallery\";\r\nimport ImageGalleryItem from \"./components/ImageGalleryItem\";\r\nimport Modal from \"./components/Modal\";\r\nimport ButtonUp from \"./components/ButtonUp/ButtonUp\";\r\nimport ButtonDown from \"./components/ButtonUp/ButtonDown\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport api from \"./service/api.js\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    query: \"\",\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    images: [],\r\n    showModal: false,\r\n    isLoading: false,\r\n    modalImg: \"\",\r\n    alt: \"\",\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.query !== this.state.query) {\r\n      this.fetch();\r\n    }\r\n  }\r\n\r\n  onChange = (query) => {\r\n    this.setState({ query, currentPage: 1, images: [] });\r\n  };\r\n\r\n  fetch = () => {\r\n    this.setState({ isLoading: true });\r\n\r\n    api\r\n      .fetchImages(this.state)\r\n      .then((images) => {\r\n        this.setState((prevState) => ({\r\n          images: [...prevState.images, ...images],\r\n          currentPage: prevState.currentPage + 1,\r\n        }));\r\n      })\r\n      .finally(() => {\r\n        this.setState({ isLoading: false });\r\n\r\n        this.handleToDown();\r\n      });\r\n  };\r\n\r\n  handleToDown = () => {\r\n    window.scrollBy(0, window.innerHeight);\r\n  };\r\n\r\n  handleClickMoreBtn = () => {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      currentPage: prevState.currentPage + 1,\r\n    }));\r\n  };\r\n\r\n  onCloseModal = (e) => {\r\n    this.setState((prevState) => ({\r\n      showModal: !prevState.showModal,\r\n    }));\r\n  };\r\n\r\n  onOpenModal = (e) => {\r\n    this.setState((prevState) => ({\r\n      modalImg: e.target.dataset.source || \"\",\r\n      alt: e.target.dataset.title,\r\n    }));\r\n    this.onCloseModal();\r\n  };\r\n\r\n  render() {\r\n    const { showModal, filter, images, isLoading, query, modalImg, alt } =\r\n      this.state;\r\n    return (\r\n      <div className={styles.App}>\r\n        <Searchbar onSubmit={this.onChange} query={query} />\r\n        {images && isLoading && (\r\n          <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\r\n        )}\r\n        <ImageGallery onOpenModal={this.onOpenModal} id=\"imageGallery\">\r\n          <ImageGalleryItem\r\n            filter={filter}\r\n            images={images}\r\n            onOpenModal={this.onOpenModal}\r\n          />\r\n        </ImageGallery>\r\n        {images.length > 0 && (\r\n          <button\r\n            onClick={this.fetch}\r\n            className={styles.LoadMore}\r\n            id=\"loadMore\"\r\n          >\r\n            Load more...\r\n          </button>\r\n        )}\r\n        {showModal && (\r\n          <Modal\r\n            onOpenModal={this.onOpenModal}\r\n            modalImg={modalImg}\r\n            onCloseModal={this.onCloseModal}\r\n          >\r\n            <img src={modalImg} alt={alt} />\r\n          </Modal>\r\n        )}\r\n        {images.length > 0 && <ButtonUp />}\r\n        {images.length > 0 && <ButtonDown />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}